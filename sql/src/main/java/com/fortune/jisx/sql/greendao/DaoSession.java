package com.fortune.jisx.sql.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.fortune.jisx.sql.greendao.DownloadEntity;
import com.fortune.jisx.sql.greendao.LogEntity;
import com.fortune.jisx.sql.greendao.OperateEntity;
import com.fortune.jisx.sql.greendao.UserEntity;

import com.fortune.jisx.sql.greendao.DownloadEntityDao;
import com.fortune.jisx.sql.greendao.LogEntityDao;
import com.fortune.jisx.sql.greendao.OperateEntityDao;
import com.fortune.jisx.sql.greendao.UserEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig downloadEntityDaoConfig;
    private final DaoConfig logEntityDaoConfig;
    private final DaoConfig operateEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;

    private final DownloadEntityDao downloadEntityDao;
    private final LogEntityDao logEntityDao;
    private final OperateEntityDao operateEntityDao;
    private final UserEntityDao userEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        downloadEntityDaoConfig = daoConfigMap.get(DownloadEntityDao.class).clone();
        downloadEntityDaoConfig.initIdentityScope(type);

        logEntityDaoConfig = daoConfigMap.get(LogEntityDao.class).clone();
        logEntityDaoConfig.initIdentityScope(type);

        operateEntityDaoConfig = daoConfigMap.get(OperateEntityDao.class).clone();
        operateEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        downloadEntityDao = new DownloadEntityDao(downloadEntityDaoConfig, this);
        logEntityDao = new LogEntityDao(logEntityDaoConfig, this);
        operateEntityDao = new OperateEntityDao(operateEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);

        registerDao(DownloadEntity.class, downloadEntityDao);
        registerDao(LogEntity.class, logEntityDao);
        registerDao(OperateEntity.class, operateEntityDao);
        registerDao(UserEntity.class, userEntityDao);
    }
    
    public void clear() {
        downloadEntityDaoConfig.clearIdentityScope();
        logEntityDaoConfig.clearIdentityScope();
        operateEntityDaoConfig.clearIdentityScope();
        userEntityDaoConfig.clearIdentityScope();
    }

    public DownloadEntityDao getDownloadEntityDao() {
        return downloadEntityDao;
    }

    public LogEntityDao getLogEntityDao() {
        return logEntityDao;
    }

    public OperateEntityDao getOperateEntityDao() {
        return operateEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

}
