apply plugin: 'com.android.application'

android {

    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    packagingOptions {
        exclude '*.apk'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    signingConfigs {
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }

    defaultConfig {
//        applicationId APPLICATION_ID
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        multiDexEnabled true
        jackOptions {
            enabled true
        }
    }

    /*渠道配置*/
    productFlavors {
        dev {
            applicationId APPLICATION_ID
            // 动态修改 常量 字段
            buildConfigField "String", "ENVIRONMENT", '"dev"'
        }
        stage {
            applicationId APPLICATION_ID
            // 动态修改 常量 字段
            buildConfigField "String", "ENVIRONMENT", '"stage"'
        }
        prod {
            applicationId APPLICATION_ID
            // 动态修改 常量 字段
            buildConfigField "String", "ENVIRONMENT", '"prod"'
        }
    }

    productFlavors.all {

    }

    buildTypes {
        release {
            buildConfigField "String", "HOST", DEBUG_HOST
            //移除无用的resource文件
            shrinkResources true
            //Zipalign优化
            zipAlignEnabled true

            //签名
            signingConfig signingConfigs.release

            applicationIdSuffix ".release"
            minifyEnabled true
            debuggable false
            //混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 自定义输出配置
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为pcbwx_v1.0_wandou.apk
                        def fileName = "frame_${defaultConfig.versionName}_${variant.productFlavors[0].name}_${releaseTime()}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }

        debug {
            buildConfigField "String", "HOST", RELEASE_HOST

            //签名
            signingConfig signingConfigs.release

            applicationIdSuffix ".debug"
            minifyEnabled false
            debuggable true
        }
    }

    /*忽略编译过程中的lint报错*/
    lintOptions {
        abortOnError false
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':view')
    compile project(':api')
    compile project(':sql')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.jakewharton:butterknife:8.8.1'
    /*控件注解框架*/
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    /*配合控件注解框架*/
    // 崩溃日志捕获
    compile 'ch.acra:acra:4.9.2'
}
